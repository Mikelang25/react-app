{"version":3,"sources":["components/CharacterCard/index.js","App.js","index.js"],"names":["styles","containerStyle","float","margin","border","width","height","textAlign","borderRadius","cursor","backgroundColor","boxShadow","image","marginTop","CharacterCard","props","className","style","onClick","markedSelected","id","alt","name","src","App","state","characters","answer","selected","score","highScore","includes","setState","updateHigh","push","array","i","length","j","Math","floor","random","this","shuffleCharacters","map","character","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"ymCAGMA,G,MAAS,CACXC,eAAgB,CACdC,MAAO,OACPC,OAAO,OACPC,OAAQ,kBACRC,MAAM,QACNC,OAAO,QACPC,UAAW,SACXC,aAAa,MACbC,OAAO,UACPC,gBAAgB,QAChBC,UAAW,sBAEbC,MAAM,CACFC,UAAU,SAYHC,MARf,SAAuBC,GACnB,OACI,yBAAKC,UAAU,iBAAiBC,MAAOjB,EAAOC,eAAgBiB,QAAS,kBAAMH,EAAMI,eAAeJ,EAAMK,MACpG,yBAAKH,MAAOjB,EAAOY,MAAOS,IAAKN,EAAMO,KAAMC,IAAKR,EAAMH,MAAOQ,GAAIL,EAAMK,O,eC6DpEI,E,2MA9EbC,MAAQ,CACNC,aACAC,OAAQ,GACRC,SAAS,GACTC,MAAM,EACNC,UAAU,G,EAkBZX,eAAiB,SAAAC,GACV,EAAKK,MAAMG,SAASG,SAASX,IAC9B,EAAKY,SAAS,CACZL,OAAO,uBACPC,SAAS,GACTC,MAAM,IAER,EAAKI,eAEL,EAAKR,MAAMG,SAASM,KAAKd,GACzB,EAAKY,SAAS,CACZL,OAAO,yBACPE,MAAO,EAAKJ,MAAMI,MAAQ,M,iFA3BhBM,GAChB,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADD,EAElB,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkC,KAE9BD,EAAMG,GAFwB,Q,mCAOxCI,KAAKjB,MAAMI,MAAQa,KAAKjB,MAAMK,WAC/BY,KAAKV,SAAS,CACZF,UAAUY,KAAKjB,MAAMI,U,+BAsBjB,IAAD,OACP,OACE,yBAAKb,UAAU,WACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,+BAAf,4BACA,yBAAKA,UAAU,+BAA8B,2BAAI0B,KAAKjB,MAAME,SAClE,yBAAKX,UAAU,+BAA8B,qCAAW0B,KAAKjB,MAAMI,MAAtB,iBAA2Ca,KAAKjB,MAAMK,aAE/F,yBAAKd,UAAU,OACb,yBAAKA,UAAU,sCACb,+CACA,uGAEF,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,OACb,yBAAKI,GAAG,aAAaJ,UAAU,aAC5B0B,KAAKC,kBAAkBjB,GACvBgB,KAAKjB,MAAMC,WAAWkB,KAAI,SAAAC,GAAS,OAClC,kBAAC,EAAD,CACEvB,KAAMuB,EAAUvB,KAChBwB,IAAKD,EAAUzB,GACfA,GAAIyB,EAAUzB,GACdR,MAAOiC,EAAUjC,MACjBO,eAAkB,EAAKA,6B,GAjEzB4B,IAAMC,W,MCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.aa4f98b7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./index.css\";\n\nconst styles = {\n    containerStyle: {\n      float: \"left\",\n      margin:\"20px\",\n      border: \"3pt solid black\",\n      width:\"205px\",\n      height:\"205px\",\n      textAlign: \"center\",\n      borderRadius:\"5px\",\n      cursor:\"pointer\",\n      backgroundColor:\"white\",\n      boxShadow: \"10px 5px 5px black\"\n    },\n    image:{\n        marginTop:\"3px\"\n    }\n  };\n\nfunction CharacterCard(props){\n    return (\n        <div className=\"containerStyle\" style={styles.containerStyle} onClick={() => props.markedSelected(props.id)}>\n            <img style={styles.image} alt={props.name} src={props.image} id={props.id}/>\n        </div>\n    );    \n}\n\nexport default CharacterCard;","import React from 'react';\nimport CharacterCard from \"./components/CharacterCard\";\nimport \"./App.css\";\nimport characters from \"./characters.json\";\n\nclass App extends React.Component {\n\n  state = {\n    characters,\n    answer: \"\",\n    selected:[],\n    score:0,\n    highScore:0\n  };\n\n  shuffleCharacters(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  updateHigh(){\n    if(this.state.score > this.state.highScore){\n      this.setState({\n        highScore:this.state.score\n      })\n    }\n  }\n\n  markedSelected = id =>{\n      if(this.state.selected.includes(id)){\n        this.setState({\n          answer:\"That guess is wrong!\",\n          selected:[],\n          score:0          \n        });\n        this.updateHigh()\n      }else{\n        this.state.selected.push(id)\n        this.setState({\n          answer:\"That guess is correct!\",\n          score: this.state.score + 1\n        });\n      }\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"row\">\n          <div className=\"col-md-4 text-center header\">Premier League Pick Game</div>\n          <div className=\"col-md-4 text-center header\"><p>{this.state.answer}</p></div>\n    <div className=\"col-md-4 text-center header\"><p>Score: {this.state.score} | Highscore: {this.state.highScore}</p></div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-3 text-center dir-container\">\n            <h2>Team Click Game</h2>\n            <p>Click on the images to earn points, but don't click the same one twice!</p>\n          </div>\n          <div className=\"col-md-9 char-container\">\n            <div className=\"row\">\n              <div id=\"characters\" className=\"col-md-11\">\n                {this.shuffleCharacters(characters)}\n                {this.state.characters.map(character => (\n                  <CharacterCard\n                    name={character.name}\n                    key={character.id}\n                    id={character.id}\n                    image={character.image}\n                    markedSelected = {this.markedSelected}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n\n\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}